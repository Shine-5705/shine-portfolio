---
import style from '../../assets/styles/Footer.module.scss';
---

<footer class={style.footerContainer}>
    <canvas class={style.threeJsCanvas} id="footerCanvas"></canvas>

    <div class={style.footerContent}>
        <div class={style.footerBrand}>
            <h3 class={style.brandName}>Shine Gupta</h3>
            <p class={style.brandTagline}>Building Digital Dreams</p>
        </div>

        <div class={style.socialLinks}>
            <a
                    href="https://github.com"
                    target="_blank"
                    rel="noopener noreferrer"
                    class={`${style.socialLink} ${style.github}`}
                    aria-label="GitHub"
            >
                <svg viewBox="0 0 24 24" fill="currentColor">
                    <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                </svg>
            </a>

            <a
                    href="https://linkedin.com"
                    target="_blank"
                    rel="noopener noreferrer"
                    class={`${style.socialLink} ${style.linkedin}`}
                    aria-label="LinkedIn"
            >
                <svg viewBox="0 0 24 24" fill="currentColor">
                    <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
                </svg>
            </a>

            <a
                    href="https://x.com"
                    target="_blank"
                    rel="noopener noreferrer"
                    class={`${style.socialLink} ${style.twitter}`}
                    aria-label="X (formerly Twitter)"
            >
                <svg viewBox="0 0 24 24" fill="currentColor">
                    <path d="M18.901 1.153h3.68l-8.04 9.19L24 22.846h-7.406l-5.8-7.584-6.638 7.584H.474l8.6-9.83L0 1.154h7.594l5.243 6.932ZM17.61 20.644h2.039L6.486 3.24H4.298Z"/>
                </svg>
            </a>

            <a
                    href="https://instagram.com"
                    target="_blank"
                    rel="noopener noreferrer"
                    class={`${style.socialLink} ${style.instagram}`}
                    aria-label="Instagram"
            >
                <svg viewBox="0 0 24 24" fill="currentColor">
                    <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z"/>
                </svg>
            </a>

            <a
                    href="https://dribbble.com"
                    target="_blank"
                    rel="noopener noreferrer"
                    class={`${style.socialLink} ${style.dribbble}`}
                    aria-label="Dribbble"
            >
                <svg viewBox="0 0 24 24" fill="currentColor">
                    <path d="M12 24C5.385 24 0 18.615 0 12S5.385 0 12 0s12 5.385 12 12-5.385 12-12 12zm10.12-10.358c-.35-.11-3.17-.953-6.384-.438 1.341 3.684 1.887 6.684 1.992 7.308 2.3-1.555 3.936-4.02 4.392-6.87zm-6.115 7.808c-.153-.9-.75-4.032-2.19-7.77l-.066.02c-5.79 2.015-7.86 6.025-8.04 6.4 1.73 1.358 3.92 2.166 6.29 2.166 1.42 0 2.77-.29 4-.816zm-11.62-2.58c.232-.4 3.045-5.055 8.332-6.765.135-.045.27-.084.405-.12-.26-.585-.54-1.167-.832-1.74C7.17 11.775 2.206 11.71 1.756 11.7l-.004.312c0 2.633.998 5.037 2.634 6.855zm-2.42-8.955c.46.008 4.683.026 9.477-1.248-1.698-3.018-3.53-5.558-3.8-5.928-2.868 1.35-5.01 3.99-5.676 7.17zM9.6 2.052c.282.38 2.145 2.914 3.822 6 3.645-1.365 5.19-3.44 5.373-3.702-1.81-1.61-4.19-2.586-6.795-2.586-.825 0-1.63.1-2.4.285zm10.335 3.483c-.218.29-1.935 2.493-5.724 4.04.24.49.47.985.68 1.486.08.18.15.36.22.53 3.41-.43 6.8.26 7.14.33-.02-2.42-.88-4.64-2.31-6.38z"/>
                </svg>
            </a>
        </div>
    </div>
</footer>

<script>
    import * as THREE from 'three';

    document.addEventListener('DOMContentLoaded', () => {
        const canvas = document.getElementById('footerCanvas') as HTMLCanvasElement;
        if (!canvas) return;

        const scene = new THREE.Scene();
        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / 120, 0.1, 1000);
        const renderer = new THREE.WebGLRenderer({
            canvas,
            alpha: true,
            antialias: true
        });

        renderer.setSize(window.innerWidth, 120);
        renderer.setClearColor(0x000000, 0);
        camera.position.z = 5;

        const butterflyGeometry = new THREE.BufferGeometry();
        const butterflyVertices = new Float32Array([
            -0.3, 0.1, 0,   -0.5, 0.3, 0,   -0.2, 0.4, 0,
            -0.3, 0.1, 0,   -0.2, 0.4, 0,   -0.1, 0.2, 0,
            -0.3, -0.1, 0,  -0.5, -0.3, 0,  -0.2, -0.4, 0,
            -0.3, -0.1, 0,  -0.2, -0.4, 0,  -0.1, -0.2, 0,

            0.3, 0.1, 0,    0.5, 0.3, 0,    0.2, 0.4, 0,
            0.3, 0.1, 0,    0.2, 0.4, 0,    0.1, 0.2, 0,
            0.3, -0.1, 0,   0.5, -0.3, 0,   0.2, -0.4, 0,
            0.3, -0.1, 0,   0.2, -0.4, 0,   0.1, -0.2, 0,

            0, 0.5, 0,      0, -0.5, 0,     0.05, 0, 0,
            0, 0.5, 0,      -0.05, 0, 0,    0, -0.5, 0
        ]);

        butterflyGeometry.setAttribute('position', new THREE.BufferAttribute(butterflyVertices, 3));

        const flowerGeometry = new THREE.BufferGeometry();
        const flowerVertices = [];
        const petals = 5;
        for (let i = 0; i < petals; i++) {
            const angle = (i / petals) * Math.PI * 2;
            const x = Math.cos(angle) * 0.2;
            const y = Math.sin(angle) * 0.2;

            flowerVertices.push(0, 0, 0); // Center
            flowerVertices.push(x * 0.5, y * 0.5, 0); // Mid point
            flowerVertices.push(x, y, 0); // Outer point
        }

        flowerGeometry.setAttribute('position', new THREE.BufferAttribute(new Float32Array(flowerVertices), 3));

        const butterflyMaterial = new THREE.MeshBasicMaterial({
            color: 0xD7ABC5,
            transparent: true,
            opacity: 0.7
        });

        const flowerMaterial = new THREE.MeshBasicMaterial({
            color: 0x6366F1,
            transparent: true,
            opacity: 0.6
        });

        const butterflies: THREE.Mesh[] = [];
        const flowers: THREE.Mesh[] = [];
        const butterflyCount = 3;
        const flowerCount = 4;

        for (let i = 0; i < butterflyCount; i++) {
            const butterfly = new THREE.Mesh(butterflyGeometry, butterflyMaterial);
            butterfly.position.x = (Math.random() - 0.5) * 10;
            butterfly.position.y = (Math.random() - 0.5) * 2;
            butterfly.position.z = Math.random() * 2;
            butterfly.scale.setScalar(0.5 + Math.random() * 0.5);
            butterflies.push(butterfly);
            scene.add(butterfly);
        }

        for (let i = 0; i < flowerCount; i++) {
            const flower = new THREE.Mesh(flowerGeometry, flowerMaterial);
            flower.position.x = (Math.random() - 0.5) * 12;
            flower.position.y = (Math.random() - 0.5) * 2;
            flower.position.z = Math.random() * 2;
            flower.scale.setScalar(0.3 + Math.random() * 0.4);
            flowers.push(flower);
            scene.add(flower);
        }

        let time = 0;
        function animate() {
            requestAnimationFrame(animate);
            time += 0.016; // ~60fps

            butterflies.forEach((butterfly, index) => {
                butterfly.position.x += Math.sin(time + index) * 0.01;
                butterfly.position.y += Math.cos(time * 1.5 + index) * 0.008;

                butterfly.rotation.z = Math.sin(time * 8 + index) * 0.3;
                butterfly.rotation.y += 0.02;

                if (butterfly.position.x > 6) butterfly.position.x = -6;
                if (butterfly.position.x < -6) butterfly.position.x = 6;
            });

            flowers.forEach((flower, index) => {
                flower.position.y += Math.sin(time * 2 + index) * 0.005;
                flower.rotation.z += 0.01;

                flower.position.x += Math.cos(time * 0.5 + index) * 0.003;

                if (flower.position.x > 7) flower.position.x = -7;
                if (flower.position.x < -7) flower.position.x = 7;
            });

            renderer.render(scene, camera);
        }

        animate();

        function handleResize() {
            const width = window.innerWidth;
            const height = window.innerWidth < 480 ? 80 : window.innerWidth < 768 ? 100 : 120;

            camera.aspect = width / height;
            camera.updateProjectionMatrix();
            renderer.setSize(width, height);
        }

        window.addEventListener('resize', handleResize);

        handleResize();
    });
</script>